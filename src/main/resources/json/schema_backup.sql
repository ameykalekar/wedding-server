drop table T_TICKET if exists;
drop table T_RESOURCE if exists;
drop table T_CUSTOMER if  exists;
drop table T_USER if exists;
drop table T_LOGIN if exists;
drop table T_PRODUCT if exists;
drop table T_ROLE_FUNCTION if exists;
drop table t_productchecklist if exists;


create table T_TICKET (ID bigint identity primary key, 
CREATEDBY varchar(50) not null,
DESCRIPTION varchar(500) not null,
STATUS varchar(50),
ASSIGNED_TO varchar(100),
USER_TYPE varchar(10),
DEVICEID  varchar(100),
DEVICELOACTION  varchar(100),
CREATED_ON date,
UPDATED_ON date,
UPDATED_BY varchar(100),
VISIT_DATE date,
VISIT_TIME varchar(20),
COMPANYID bigint,
ESTIMATE bigint
);

create table T_RESOURCE (
ID bigint identity primary key,
NAME varchar(100) not null,
CONTACT varchar(100) not null,
LOCATION varchar(100) not null,
TYPE varchar(100) not null
);

create table T_CUSTOMER (
ID bigint identity primary key,
CUSTOMER_NAME varchar(100) not null,
CUSTOMER_CONTACT varchar(100) not null,
CUSTOMER_EMAIL varchar(100)  not null
);

create table T_USER(
USERNAME varchar(100) NOT NULL PRIMARY KEY,
FIRSTNAME varchar(100) not null,
LASTNAME varchar(100) not null,
ADDRESS varchar(150) not null,
MOBILENO varchar(20) not null,
TYPE varchar(10) not null,
COMPANYID bigint,
ACTIVE varchar (20)

)

create table T_LOGIN(
USERNAME varchar(100) NOT NULL PRIMARY KEY,
PASSWORD varchar(100) not null,
ROLE varchar(100) not null,
COMPANYID bigint not null,
ACTIVE varchar(150) not null,

);

create table product_type (id bigint generated by default as identity,
 description varchar(255), 
 type varchar(255) not null, 
 active boolean ,
 primary key (id));
create table t_tasks (taskid integer generated by default as identity, checklistid integer, desc varchar(255), primary key (taskid));

create table t_product (id integer generated by default as identity, created_on timestamp not null, updated_on timestamp not null, active varchar(255), category varchar(255), comments varchar(255), companyid varchar(255), productbrand varchar(255), productname varchar(255), producttype varchar(255), subcategory varchar(255), primary key (id));
create table t_productchecklist ( created_on timestamp not null, updated_on timestamp not null, active varchar(255), checklistid varchar(255), productid varchar(255), primary key (productid));

create table  T_ROLE_FUNCTION ( 
ID bigint primary key,
ROLE varchar(100),
FUNCTION varchar(100) NOT NULL);


create table t_checklist (checklistid integer generated by default as identity, active varchar(255), checklistname varchar(255), comments varchar(255), companyid varchar(255), primary key (checklistid));


 create table t_partproduct (partid varchar(255) not null, active VARCHAR(10) default 'Y', created_on timestamp not null, updated_on timestamp not null, productid varchar(255), updateby varchar(255), primary key (partid))
 
 create table t_part (id integer generated by default as identity, active VARCHAR(10) default 'Y', created_on timestamp not null, updated_on timestamp not null, category varchar(255), comments varchar(255), companyid bigint, partbrand varchar(255), partname varchar(255), parttype varchar(255), price varchar(255), subcategory varchar(255), primary key (id))
 
 
   create table t_barcodechecklisttask (barcodeid bigint not null, checklistid bigint, comments varchar(255), taskid bigint, taskstatus varchar(255), updateby varchar(255))
  create table t_barcodepart (barcodeid bigint not null, partid bigint, updateby varchar(255))


create table t_barcodeproduct (barcodeid varchar(255) not null, active VARCHAR(10) default 'Y', created_on timestamp not null, updated_on timestamp not null, companyid bigint, productid bigint, updateby varchar(255), primary key (barcodeid))


create table t_ticketbarcode (id bigint not null, active VARCHAR(10) default 'Y', created_on timestamp not null, updated_on timestamp not null, barcodeid bigint, ticketid bigint, updateby varchar(255), primary key (id))

